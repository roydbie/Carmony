{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport { findDOMNode } from 'react-dom';\nimport React, { useContext } from 'react';\nimport BaseDropdownMenu from 'react-overlays/DropdownMenu';\nimport NavbarContext from './NavbarContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\n\nvar wrapRef = function wrapRef(props) {\n  var ref = props.ref;\n\n  props.ref = ref.__wrapped || (ref.__wrapped = function (r) {\n    return ref(findDOMNode(r));\n  });\n\n  return props;\n};\n\nvar defaultProps = {\n  alignRight: false,\n  as: 'div',\n  flip: true\n};\nvar DropdownMenu = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      alignRight = _ref.alignRight,\n      rootCloseEvent = _ref.rootCloseEvent,\n      flip = _ref.flip,\n      popperConfig = _ref.popperConfig,\n      showProps = _ref.show,\n      Component = _ref.as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"alignRight\", \"rootCloseEvent\", \"flip\", \"popperConfig\", \"show\", \"as\"]);\n\n  var isNavbar = useContext(NavbarContext);\n  var prefix = useBootstrapPrefix(bsPrefix, 'dropdown-menu');\n  return React.createElement(BaseDropdownMenu, {\n    ref: ref // FIXME: the ref situation is out of hand here\n    ,\n    flip: flip,\n    show: showProps,\n    alignEnd: alignRight,\n    usePopper: !isNavbar,\n    popperConfig: popperConfig,\n    rootCloseEvent: rootCloseEvent\n  }, function (_ref2) {\n    var placement = _ref2.placement,\n        show = _ref2.show,\n        alignEnd = _ref2.alignEnd,\n        close = _ref2.close,\n        menuProps = _ref2.props;\n    wrapRef(menuProps); // For custom components provide additional, non-DOM, props;\n\n    if (typeof Component !== 'string') {\n      menuProps.show = show;\n      menuProps.close = close;\n      menuProps.alignRight = alignEnd;\n    }\n\n    var style = props.style;\n\n    if (placement) {\n      // we don't need the default popper style,\n      // menus are display: none when not shown.\n      style = _extends({}, style, menuProps.style);\n      props['x-placement'] = placement;\n    }\n\n    return React.createElement(Component, _extends({}, props, menuProps, {\n      style: style,\n      className: classNames(className, prefix, show && 'show', alignEnd && prefix + \"-right\")\n    }));\n  });\n});\nDropdownMenu.displayName = 'DropdownMenu';\nDropdownMenu.defaultProps = defaultProps;\nexport default DropdownMenu;","map":{"version":3,"sources":["/Users/roydebie/OneDrive/VJ2020/VJ2020/GATE 3/Carmony-bootstrapopzet 2/node_modules/react-bootstrap/es/DropdownMenu.js"],"names":["_extends","_objectWithoutPropertiesLoose","classNames","findDOMNode","React","useContext","BaseDropdownMenu","NavbarContext","useBootstrapPrefix","wrapRef","props","ref","__wrapped","r","defaultProps","alignRight","as","flip","DropdownMenu","forwardRef","_ref","bsPrefix","className","rootCloseEvent","popperConfig","showProps","show","Component","isNavbar","prefix","createElement","alignEnd","usePopper","_ref2","placement","close","menuProps","style","displayName"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,6BAAP,MAA0C,yDAA1C;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,WAAT,QAA4B,WAA5B;AACA,OAAOC,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,gBAAP,MAA6B,6BAA7B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,kBAAT,QAAmC,iBAAnC;;AAEA,IAAIC,OAAO,GAAG,SAASA,OAAT,CAAiBC,KAAjB,EAAwB;AACpC,MAAIC,GAAG,GAAGD,KAAK,CAACC,GAAhB;;AAEAD,EAAAA,KAAK,CAACC,GAAN,GAAYA,GAAG,CAACC,SAAJ,KAAkBD,GAAG,CAACC,SAAJ,GAAgB,UAAUC,CAAV,EAAa;AACzD,WAAOF,GAAG,CAACR,WAAW,CAACU,CAAD,CAAZ,CAAV;AACD,GAFW,CAAZ;;AAIA,SAAOH,KAAP;AACD,CARD;;AAUA,IAAII,YAAY,GAAG;AACjBC,EAAAA,UAAU,EAAE,KADK;AAEjBC,EAAAA,EAAE,EAAE,KAFa;AAGjBC,EAAAA,IAAI,EAAE;AAHW,CAAnB;AAKA,IAAIC,YAAY,GAAGd,KAAK,CAACe,UAAN,CAAiB,UAAUC,IAAV,EAAgBT,GAAhB,EAAqB;AACvD,MAAIU,QAAQ,GAAGD,IAAI,CAACC,QAApB;AAAA,MACIC,SAAS,GAAGF,IAAI,CAACE,SADrB;AAAA,MAEIP,UAAU,GAAGK,IAAI,CAACL,UAFtB;AAAA,MAGIQ,cAAc,GAAGH,IAAI,CAACG,cAH1B;AAAA,MAIIN,IAAI,GAAGG,IAAI,CAACH,IAJhB;AAAA,MAKIO,YAAY,GAAGJ,IAAI,CAACI,YALxB;AAAA,MAMIC,SAAS,GAAGL,IAAI,CAACM,IANrB;AAAA,MAOIC,SAAS,GAAGP,IAAI,CAACJ,EAPrB;AAAA,MAQIN,KAAK,GAAGT,6BAA6B,CAACmB,IAAD,EAAO,CAAC,UAAD,EAAa,WAAb,EAA0B,YAA1B,EAAwC,gBAAxC,EAA0D,MAA1D,EAAkE,cAAlE,EAAkF,MAAlF,EAA0F,IAA1F,CAAP,CARzC;;AAUA,MAAIQ,QAAQ,GAAGvB,UAAU,CAACE,aAAD,CAAzB;AACA,MAAIsB,MAAM,GAAGrB,kBAAkB,CAACa,QAAD,EAAW,eAAX,CAA/B;AACA,SAAOjB,KAAK,CAAC0B,aAAN,CAAoBxB,gBAApB,EAAsC;AAC3CK,IAAAA,GAAG,EAAEA,GADsC,CAClC;AADkC;AAG3CM,IAAAA,IAAI,EAAEA,IAHqC;AAI3CS,IAAAA,IAAI,EAAED,SAJqC;AAK3CM,IAAAA,QAAQ,EAAEhB,UALiC;AAM3CiB,IAAAA,SAAS,EAAE,CAACJ,QAN+B;AAO3CJ,IAAAA,YAAY,EAAEA,YAP6B;AAQ3CD,IAAAA,cAAc,EAAEA;AAR2B,GAAtC,EASJ,UAAUU,KAAV,EAAiB;AAClB,QAAIC,SAAS,GAAGD,KAAK,CAACC,SAAtB;AAAA,QACIR,IAAI,GAAGO,KAAK,CAACP,IADjB;AAAA,QAEIK,QAAQ,GAAGE,KAAK,CAACF,QAFrB;AAAA,QAGII,KAAK,GAAGF,KAAK,CAACE,KAHlB;AAAA,QAIIC,SAAS,GAAGH,KAAK,CAACvB,KAJtB;AAKAD,IAAAA,OAAO,CAAC2B,SAAD,CAAP,CANkB,CAME;;AAEpB,QAAI,OAAOT,SAAP,KAAqB,QAAzB,EAAmC;AACjCS,MAAAA,SAAS,CAACV,IAAV,GAAiBA,IAAjB;AACAU,MAAAA,SAAS,CAACD,KAAV,GAAkBA,KAAlB;AACAC,MAAAA,SAAS,CAACrB,UAAV,GAAuBgB,QAAvB;AACD;;AAED,QAAIM,KAAK,GAAG3B,KAAK,CAAC2B,KAAlB;;AAEA,QAAIH,SAAJ,EAAe;AACb;AACA;AACAG,MAAAA,KAAK,GAAGrC,QAAQ,CAAC,EAAD,EAAKqC,KAAL,EAAYD,SAAS,CAACC,KAAtB,CAAhB;AACA3B,MAAAA,KAAK,CAAC,aAAD,CAAL,GAAuBwB,SAAvB;AACD;;AAED,WAAO9B,KAAK,CAAC0B,aAAN,CAAoBH,SAApB,EAA+B3B,QAAQ,CAAC,EAAD,EAAKU,KAAL,EAAY0B,SAAZ,EAAuB;AACnEC,MAAAA,KAAK,EAAEA,KAD4D;AAEnEf,MAAAA,SAAS,EAAEpB,UAAU,CAACoB,SAAD,EAAYO,MAAZ,EAAoBH,IAAI,IAAI,MAA5B,EAAoCK,QAAQ,IAAIF,MAAM,GAAG,QAAzD;AAF8C,KAAvB,CAAvC,CAAP;AAID,GApCM,CAAP;AAqCD,CAlDkB,CAAnB;AAmDAX,YAAY,CAACoB,WAAb,GAA2B,cAA3B;AACApB,YAAY,CAACJ,YAAb,GAA4BA,YAA5B;AACA,eAAeI,YAAf","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport { findDOMNode } from 'react-dom';\nimport React, { useContext } from 'react';\nimport BaseDropdownMenu from 'react-overlays/DropdownMenu';\nimport NavbarContext from './NavbarContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\n\nvar wrapRef = function wrapRef(props) {\n  var ref = props.ref;\n\n  props.ref = ref.__wrapped || (ref.__wrapped = function (r) {\n    return ref(findDOMNode(r));\n  });\n\n  return props;\n};\n\nvar defaultProps = {\n  alignRight: false,\n  as: 'div',\n  flip: true\n};\nvar DropdownMenu = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      alignRight = _ref.alignRight,\n      rootCloseEvent = _ref.rootCloseEvent,\n      flip = _ref.flip,\n      popperConfig = _ref.popperConfig,\n      showProps = _ref.show,\n      Component = _ref.as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"alignRight\", \"rootCloseEvent\", \"flip\", \"popperConfig\", \"show\", \"as\"]);\n\n  var isNavbar = useContext(NavbarContext);\n  var prefix = useBootstrapPrefix(bsPrefix, 'dropdown-menu');\n  return React.createElement(BaseDropdownMenu, {\n    ref: ref // FIXME: the ref situation is out of hand here\n    ,\n    flip: flip,\n    show: showProps,\n    alignEnd: alignRight,\n    usePopper: !isNavbar,\n    popperConfig: popperConfig,\n    rootCloseEvent: rootCloseEvent\n  }, function (_ref2) {\n    var placement = _ref2.placement,\n        show = _ref2.show,\n        alignEnd = _ref2.alignEnd,\n        close = _ref2.close,\n        menuProps = _ref2.props;\n    wrapRef(menuProps); // For custom components provide additional, non-DOM, props;\n\n    if (typeof Component !== 'string') {\n      menuProps.show = show;\n      menuProps.close = close;\n      menuProps.alignRight = alignEnd;\n    }\n\n    var style = props.style;\n\n    if (placement) {\n      // we don't need the default popper style,\n      // menus are display: none when not shown.\n      style = _extends({}, style, menuProps.style);\n      props['x-placement'] = placement;\n    }\n\n    return React.createElement(Component, _extends({}, props, menuProps, {\n      style: style,\n      className: classNames(className, prefix, show && 'show', alignEnd && prefix + \"-right\")\n    }));\n  });\n});\nDropdownMenu.displayName = 'DropdownMenu';\nDropdownMenu.defaultProps = defaultProps;\nexport default DropdownMenu;"]},"metadata":{},"sourceType":"module"}